fragment AccountErrorFragment on AccountError {
  message
  field
  code
}

fragment CheckoutErrorFragment on CheckoutError {
  message
  field
  code
}

fragment CheckoutFragment on Checkout {
  id
  email
  shippingAddress {
    ...AddressFragment
  }
  billingAddress {
    ...AddressFragment
  }
  isShippingRequired
  user {
    id
    email
  }
  availablePaymentGateways {
    id
    name
  }
  deliveryMethod {
    ... on ShippingMethod {
      id
    }
    ... on Warehouse {
      id
    }
  }
  shippingMethods {
    id
    name
    price {
      amount
      currency
    }
  }
  totalPrice {
    gross {
      amount
    }
  }
  availablePaymentGateways {
    id
    name
  }
  deliveryMethod {
    ... on ShippingMethod {
      id
    }
    ... on Warehouse {
      id
    }
  }
  shippingMethods {
    id
    name
    price {
      amount
      currency
    }
    maximumDeliveryDays
    minimumDeliveryDays
  }
  totalPrice {
    gross {
      amount
      currency
    }
    tax {
      currency
      amount
    }
  }
  shippingPrice {
    gross {
      amount
      currency
    }
  }
  subtotalPrice {
    gross {
      amount
      currency
    }
  }
  lines {
    ...CheckoutLineFragment
  }
}

fragment CheckoutLineFragment on CheckoutLine {
  id
  quantity
  totalPrice {
    gross {
      currency
      amount
    }
  }
  variant {
    id
    pricing {
      onSale
      price {
        gross {
          currency
          amount
        }
      }
      priceUndiscounted {
        gross {
          currency
          amount
        }
      }
    }
    name
    product {
      name
    }
    media {
      alt
      type
      url(size: 72)
    }
  }
}

fragment AddressFragment on Address {
  id
  city
  phone
  postalCode
  companyName
  cityArea
  streetAddress1
  streetAddress2
  countryArea
  country {
    country
    code
  }
  firstName
  lastName
}

query checkout($token: UUID!) {
  checkout(token: $token) {
    ...CheckoutFragment
  }
}

query user {
  me {
    id
    addresses {
      ...AddressFragment
    }
    defaultBillingAddress {
      id
    }
    defaultShippingAddress {
      id
    }
  }
}

mutation checkoutLinesUpdate(
  $token: UUID!
  $lines: [CheckoutLineUpdateInput!]!
) {
  checkoutLinesUpdate(token: $token, lines: $lines) {
    errors {
      ...CheckoutErrorFragment
    }
    checkout {
      token
      lines {
        ...CheckoutLineFragment
      }
    }
  }
}

mutation checkoutLineDelete($token: UUID!, $lineId: ID) {
  checkoutLineDelete(token: $token, lineId: $lineId) {
    errors {
      ...CheckoutErrorFragment
    }
    checkout {
      token
      lines {
        ...CheckoutLineFragment
      }
    }
  }
}

mutation checkoutEmailUpdate($email: String!, $token: UUID!) {
  checkoutEmailUpdate(email: $email, token: $token) {
    errors {
      ...CheckoutErrorFragment
    }
    checkout {
      ...CheckoutFragment
    }
  }
}

mutation checkoutCustomerAttach($token: UUID!) {
  checkoutCustomerAttach(token: $token) {
    errors {
      ...CheckoutErrorFragment
    }
    checkout {
      ...CheckoutFragment
    }
  }
}

mutation checkoutCustomerDetach($token: UUID!) {
  checkoutCustomerDetach(token: $token) {
    errors {
      ...CheckoutErrorFragment
    }
    checkout {
      ...CheckoutFragment
    }
  }
}

mutation userAddressDelete($id: ID!) {
  accountAddressDelete(id: $id) {
    errors {
      ...AccountErrorFragment
    }
    address {
      ...AddressFragment
    }
  }
}
mutation userAddressUpdate($id: ID!, $address: AddressInput!) {
  accountAddressUpdate(id: $id, input: $address) {
    errors {
      ...AccountErrorFragment
    }
    address {
      ...AddressFragment
    }
  }
}

mutation userAddressCreate($address: AddressInput!, $type: AddressTypeEnum) {
  accountAddressCreate(type: $type, input: $address) {
    errors {
      ...AccountErrorFragment
    }
    address {
      ...AddressFragment
    }
  }
}

mutation checkoutShippingAddressUpdate(
  $token: UUID!
  $shippingAddress: AddressInput!
) {
  checkoutShippingAddressUpdate(
    token: $token
    shippingAddress: $shippingAddress
  ) {
    errors {
      ...CheckoutErrorFragment
    }
    checkout {
      ...CheckoutFragment
    }
  }
}

mutation checkoutBillingAddressUpdate(
  $token: UUID!
  $billingAddress: AddressInput!
) {
  checkoutBillingAddressUpdate(token: $token, billingAddress: $billingAddress) {
    errors {
      ...CheckoutErrorFragment
    }
    checkout {
      ...CheckoutFragment
    }
  }
}

mutation checkoutDeliveryMethodUpdate($token: UUID!, $deliveryMethodId: ID!) {
  checkoutDeliveryMethodUpdate(
    token: $token
    deliveryMethodId: $deliveryMethodId
  ) {
    errors {
      ...CheckoutErrorFragment
    }
    checkout {
      ...CheckoutFragment
    }
  }
}

query addressValidationRules($countryCode: CountryCode!) {
  addressValidationRules(countryCode: $countryCode) {
    addressFormat
    allowedFields
    requiredFields
  }
}
