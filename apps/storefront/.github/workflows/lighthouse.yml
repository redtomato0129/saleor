name: Vercel Preview URL Lighthouse Audit

on:
  issue_comment:
    types: [edited]

jobs:
  generate_lighthouse_audit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Add comment to PR
        id: loading_comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            Running Lighthouse audit...
      - name: Capture Vercel preview URL
        id: vercel_preview_url
        uses: aaron-binary/vercel-preview-url-action@v0.0.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: |
            ${{ steps.vercel_preview_url.outputs.vercel_preview_url }}/default-channel/en-US/products/saleor-cup
            ${{ steps.vercel_preview_url.outputs.vercel_preview_url }}/default-channel/en-US/category/accessories
            ${{ steps.vercel_preview_url.outputs.vercel_preview_url }}/default-channel/en-US
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
          configPath: ".github/workflows/lighthouserc.json"
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const results = (${{ steps.lighthouse_audit.outputs.manifest }}).filter(result => result.isRepresentativeRun);

            const score = res => res >= 90 ? '🟢' : res >= 50 ? '🟠' : '🔴';

            const comment = results.map((result) => {
              const summary = result.summary;
              const url = result.url;

              return `
              🌎 [${url}](${url})
              ⚡️ [Lighthouse report](${links[url]})

              | Category | Score |
              | --- | --- |
              ${Object.keys(summary).map((key) => {
                const percentage = Math.round(summary[key] * 100);
                return `| ${score(percentage)} ${key} | ${percentage} |`;
              }).join('\n')}
              `;
            }).join('---');

            core.setOutput("comment", comment);
      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
